// code port from https://gist.github.com/rexim/c595009436f87ca076e7c4a2fb92ce10
const sizeof(board) 30 end
mem board sizeof(board) end

// the memory block allocated to board is already 0 initialized
1 sizeof(board) 1 - mem-set board

var i
var j
var pattern

0 set i
while i sizeof(board) 2 - < do
    0 set j
    while j sizeof(board) < do
        j mem-get board
        // the math here works because '*' in ascii is 42 and ' ' is 32
        // so if the value is 0 we multiply with 0 and add 32 so we have space
        // and if we multiply with 1 we get 30 and we add 32 so we have asterisk
        10 * 32 + putc
        j 1 + set j
    end

    10 putc

    1 set j

    0 mem-get board 1 <<
    1 mem-get board |
    set pattern
    while j sizeof(board) 1 - < do
        pattern 1 << 7 & j 1 + mem-get board |
        set pattern
        110 pattern >> 1 &
        j mem-set board
        j 1 + set j
    end

    i 1 + set i
end
